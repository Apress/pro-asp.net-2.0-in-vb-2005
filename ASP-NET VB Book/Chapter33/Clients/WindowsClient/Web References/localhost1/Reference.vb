'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:2.0.50727.26
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On

Imports System
Imports System.ComponentModel
Imports System.Data
Imports System.Diagnostics
Imports System.Web.Services
Imports System.Web.Services.Protocols
Imports System.Xml.Serialization

'
'This source code was auto-generated by Microsoft.VSDesigner, Version 2.0.50727.26.
'
Namespace localhost1
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.26"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Web.Services.WebServiceBindingAttribute(Name:="SessionHeaderServiceSoap", [Namespace]:="http://tempuri.org/")>  _
    Partial Public Class SessionHeaderService
        Inherits System.Web.Services.Protocols.SoapHttpClientProtocol
        
        Private sessionHeaderValueField As SessionHeader
        
        Private CreateSessionOperationCompleted As System.Threading.SendOrPostCallback
        
        Private SetSessionDataOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetSessionDataOperationCompleted As System.Threading.SendOrPostCallback
        
        Private useDefaultCredentialsSetExplicitly As Boolean
        
        '''<remarks/>
        Public Sub New()
            MyBase.New
            Me.Url = Global.My.MySettings.Default.WindowsClient_localhost1_SessionHeaderService
            If (Me.IsLocalFileSystemWebService(Me.Url) = true) Then
                Me.UseDefaultCredentials = true
                Me.useDefaultCredentialsSetExplicitly = false
            Else
                Me.useDefaultCredentialsSetExplicitly = true
            End If
        End Sub
        
        Public Property SessionHeaderValue() As SessionHeader
            Get
                Return Me.sessionHeaderValueField
            End Get
            Set
                Me.sessionHeaderValueField = value
            End Set
        End Property
        
        Public Shadows Property Url() As String
            Get
                Return MyBase.Url
            End Get
            Set
                If (((Me.IsLocalFileSystemWebService(MyBase.Url) = true)  _
                            AndAlso (Me.useDefaultCredentialsSetExplicitly = false))  _
                            AndAlso (Me.IsLocalFileSystemWebService(value) = false)) Then
                    MyBase.UseDefaultCredentials = false
                End If
                MyBase.Url = value
            End Set
        End Property
        
        Public Shadows Property UseDefaultCredentials() As Boolean
            Get
                Return MyBase.UseDefaultCredentials
            End Get
            Set
                MyBase.UseDefaultCredentials = value
                Me.useDefaultCredentialsSetExplicitly = true
            End Set
        End Property
        
        '''<remarks/>
        Public Event CreateSessionCompleted As CreateSessionCompletedEventHandler
        
        '''<remarks/>
        Public Event SetSessionDataCompleted As SetSessionDataCompletedEventHandler
        
        '''<remarks/>
        Public Event GetSessionDataCompleted As GetSessionDataCompletedEventHandler
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("SessionHeaderValue", Direction:=System.Web.Services.Protocols.SoapHeaderDirection.Out),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CreateSession", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub CreateSession()
            Me.Invoke("CreateSession", New Object(-1) {})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CreateSessionAsync()
            Me.CreateSessionAsync(Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CreateSessionAsync(ByVal userState As Object)
            If (Me.CreateSessionOperationCompleted Is Nothing) Then
                Me.CreateSessionOperationCompleted = AddressOf Me.OnCreateSessionOperationCompleted
            End If
            Me.InvokeAsync("CreateSession", New Object(-1) {}, Me.CreateSessionOperationCompleted, userState)
        End Sub
        
        Private Sub OnCreateSessionOperationCompleted(ByVal arg As Object)
            If (Not (Me.CreateSessionCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CreateSessionCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("SessionHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SetSessionData", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub SetSessionData(ByVal ds As System.Data.DataSet)
            Me.Invoke("SetSessionData", New Object() {ds})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SetSessionDataAsync(ByVal ds As System.Data.DataSet)
            Me.SetSessionDataAsync(ds, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SetSessionDataAsync(ByVal ds As System.Data.DataSet, ByVal userState As Object)
            If (Me.SetSessionDataOperationCompleted Is Nothing) Then
                Me.SetSessionDataOperationCompleted = AddressOf Me.OnSetSessionDataOperationCompleted
            End If
            Me.InvokeAsync("SetSessionData", New Object() {ds}, Me.SetSessionDataOperationCompleted, userState)
        End Sub
        
        Private Sub OnSetSessionDataOperationCompleted(ByVal arg As Object)
            If (Not (Me.SetSessionDataCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent SetSessionDataCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("SessionHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetSessionData", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetSessionData() As System.Data.DataSet
            Dim results() As Object = Me.Invoke("GetSessionData", New Object(-1) {})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetSessionDataAsync()
            Me.GetSessionDataAsync(Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetSessionDataAsync(ByVal userState As Object)
            If (Me.GetSessionDataOperationCompleted Is Nothing) Then
                Me.GetSessionDataOperationCompleted = AddressOf Me.OnGetSessionDataOperationCompleted
            End If
            Me.InvokeAsync("GetSessionData", New Object(-1) {}, Me.GetSessionDataOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetSessionDataOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetSessionDataCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetSessionDataCompleted(Me, New GetSessionDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        Public Shadows Sub CancelAsync(ByVal userState As Object)
            MyBase.CancelAsync(userState)
        End Sub
        
        Private Function IsLocalFileSystemWebService(ByVal url As String) As Boolean
            If ((url Is Nothing)  _
                        OrElse (url Is String.Empty)) Then
                Return false
            End If
            Dim wsUri As System.Uri = New System.Uri(url)
            If ((wsUri.Port >= 1024)  _
                        AndAlso (String.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) = 0)) Then
                Return true
            End If
            Return false
        End Function
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.26"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://tempuri.org/"),  _
     System.Xml.Serialization.XmlRootAttribute([Namespace]:="http://tempuri.org/", IsNullable:=false)>  _
    Partial Public Class SessionHeader
        Inherits System.Web.Services.Protocols.SoapHeader
        
        Private sessionIDField As String
        
        Private anyAttrField() As System.Xml.XmlAttribute
        
        '''<remarks/>
        Public Property SessionID() As String
            Get
                Return Me.sessionIDField
            End Get
            Set
                Me.sessionIDField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlAnyAttributeAttribute()>  _
        Public Property AnyAttr() As System.Xml.XmlAttribute()
            Get
                Return Me.anyAttrField
            End Get
            Set
                Me.anyAttrField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.26")>  _
    Public Delegate Sub CreateSessionCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.26")>  _
    Public Delegate Sub SetSessionDataCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.26")>  _
    Public Delegate Sub GetSessionDataCompletedEventHandler(ByVal sender As Object, ByVal e As GetSessionDataCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.26"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetSessionDataCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
End Namespace
